name       : llvm-roc
version    : 5.0.1
release    : 1
source     :
    - https://github.com/RadeonOpenCompute/llvm-project/archive/refs/tags/rocm-5.0.1.tar.gz : 77e252720de65a1dd43a92d3589b350b5a90b60990cb4afa7ac95b2ba759c8f4
homepage   : https://github.com/RadeonOpenCompute/llvm-project
license    : Apache-2.0-with-LLVM-exception
summary    : Low Level Virtual Machine, customized for ROCm
component  : programming.devel
libsplit   : no
clang      : yes
description: |
    The LLVM Project is a collection of modular and reusable compiler and toolchain technologies. Despite its name, LLVM has little to do with traditional virtual machines. The name "LLVM" itself is not an acronym; it is the full name of the project.
patterns   :
    - clang-devel :
        - /usr/include/clang*
        - /usr/include/lld*
        - /usr/include/openmp*
        - /usr/lib64/libclang*.a
    - clang :
        - /usr/bin
        - /usr/libexec
        - /usr/lib64/clang
        - /usr/lib64/libclang*.so*
        - /usr/lib64/SampleAnalyzerPlugin.so
        - /usr/lib64/CheckerOptionHandlingAnalyzerPlugin.so
        - /usr/lib64/CheckerDependencyHandlingAnalyzerPlugin.so
        - /usr/share/man/*/*clang*
        - /usr/share/man/*/*scan-build*
        - /usr/share/llvm/cmake
        - /usr/share/clang
        - /usr/share/opt-viewer
        - /usr/share/scan-build
        - /usr/share/scan-view
    - devel :
        - /usr/bin/FileCheck
        - /usr/bin/bugpoint
        - /usr/bin/count
        - /usr/bin/dsymutil
        - /usr/bin/lli*
        - /usr/bin/llc*
        - /usr/bin/llvm*
        - /usr/bin/not
        - /usr/bin/obj2yaml
        - /usr/bin/opt
        - /usr/bin/sancov
        - /usr/bin/sanstats
        - /usr/bin/verify-uselistorder
        - /usr/bin/yaml-bench
        - /usr/bin/yaml2obj
        - /usr/share/llvm/cmake
setup      : |
    cd llvm
    %cmake_ninja \
        -DCMAKE_INSTALL_PREFIX="%libdir%/llvm/roc" \
        -DLLVM_BUILD_DOCS=NO \
        -DLLVM_ENABLE_DOXYGEN=OFF \
        -DLLVM_ENABLE_OCAMLDOC=OFF \
        -DLLVM_ENABLE_PROJECTS="clang;lld" \
        -DLLVM_ENABLE_SPHINX=NO \
        -DLLVM_INSTALL_UTILS=ON \
        -DLLVM_TARGETS_TO_BUILD="AMDGPU;X86" \
        -DLLVM_VERSION_SUFFIX=roc \
        -DOCAMLFIND=NO .
build      : |
    pushd llvm
    %ninja_build -v -j8
install    : |
    pushd llvm
    %ninja_install -v
    popd