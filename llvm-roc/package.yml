name       : llvm-roc
version    : 5.0.1
release    : 1
source     :
    - https://github.com/RadeonOpenCompute/llvm-project/archive/refs/tags/rocm-5.0.1.tar.gz : 77e252720de65a1dd43a92d3589b350b5a90b60990cb4afa7ac95b2ba759c8f4
homepage   : https://github.com/RadeonOpenCompute/llvm-project
license    : Apache-2.0-with-LLVM-exception
summary    : 
    - Low Level Virtual Machine, customized for ROCm
    - clang : Clang Compiler frontend to LLVM
	- clang-devel : Development files for building clang plugins
	- clang-32bit : 32bit libraries for clang
component  :
    - programming
	- devel : programming.devel
	- clang : programming
	- clang-32bit : emul32
	- clang-32bit-devel : programming.devel
    - clang-devel : programming.devel
debug      : no
emul32     : yes
libsplit   : no
clang      : yes
builddeps  : 
    - pkgconfig32(libelf)
    - pkgconfig32(libffi)
    - pkgconfig32(libxml-2.0)
    - pkgconfig32(ncursesw)
    - pkgconfig32(libedit)
    - doxygen
    - glibc-32bit-devel
    - libgcc-32bit
    - libstdc++-32bit
	- llvm-32bit-devel
	- python-recommonmark
	- swig
	- zlib-32bit-devel
rundeps    :
    - clang :
	    - llvm-devel
	- clang-devel :
	    - llvm-clang
	- clang-32bit-devel :
	    - llvm-clang-32bit
	    - llvm-clang-devel
description: |
    The LLVM Project is a collection of modular and reusable compiler and toolchain technologies. Despite its name, LLVM has little to do with traditional virtual machines. The name "LLVM" itself is not an acronym; it is the full name of the project.
setup      : |
    cd llvm
    %cmake_ninja \
        -DCMAKE_INSTALL_PREFIX="%libdir%/llvm/roc" \
        -DLLVM_BUILD_DOCS=NO \
        -DLLVM_ENABLE_DOXYGEN=OFF \
        -DLLVM_ENABLE_OCAMLDOC=OFF \
        -DLLVM_ENABLE_PROJECTS="clang;lld" \
        -DLLVM_ENABLE_SPHINX=NO \
        -DLLVM_INSTALL_UTILS=ON \
        -DLLVM_TARGETS_TO_BUILD="AMDGPU;X86" \
        -DLLVM_VERSION_SUFFIX=roc \
        -DOCAMLFIND=NO .
build      : |
    cd llvm
    %ninja_build -j8
install    : |
    cd llvm
    %ninja_install
